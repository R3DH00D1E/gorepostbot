name: Deploy VK Telegram Repost Bot

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: self-hosted

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Build the bot
        run: |
          go build -o repostbot main.go

      - name: Substitute placeholders in config.json
        run: |
          # Проверяем, существует ли файл
          if [ ! -f deploy/config.json ]; then
            echo "Error: deploy/config.json not found."
            exit 1
          fi

          # Заменяем плейсхолдеры на значения из GitHub Secrets
          sed -e "s|your_telegram_token_here|${{ secrets.TG_TOKEN }}|g" \
              -e "s|your_vk_token_here|${{ secrets.VK_TOKEN }}|g" \
              -e "s|user_id_vk|${{ secrets.TARGET_USER }}|g" \
              -e "s|path/to/cache.json|${{ secrets.CACHE_FILE }}|g" \
              -e "s|120|${{ secrets.POLL_INTERVAL }}|g" \
              -e "s|-1001234567890|${{ secrets.CHAT_ID }}|g" \
              deploy/config.json > deploy/config.json.tmp

          # Перемещаем временный файл обратно
          mv deploy/config.json.tmp deploy/config.json

      - name: Copy config.json to target directory
        run: |
          TARGET_DIR="${{ secrets.WORKDIR }}"
          if [ -z "$TARGET_DIR" ]; then
            echo "Error: WORKDIR is not set or empty."
            exit 1
          fi
          mkdir -p "$TARGET_DIR"
          cp deploy/config.json "$TARGET_DIR/"

      - name: Substitute placeholders in repostbot.service
        run: |
          # Проверяем, существует ли файл
          if [ ! -f deploy/repostbot.service ]; then
            echo "Error: deploy/repostbot.service not found."
            exit 1
          fi

          # Заменяем плейсхолдеры {{WORKDIR}} и %USER%
          sed -e "s|{{WORKDIR}}|${{ secrets.WORKDIR }}|g" \
              -e "s|%USER%|${{ secrets.USER }}|g" \
              deploy/repostbot.service > deploy/repostbot.service.tmp

          # Перемещаем временный файл обратно
          mv deploy/repostbot.service.tmp deploy/repostbot.service

          # Копируем файл службы в /etc/systemd/system/
          sudo cp deploy/repostbot.service /etc/systemd/system/repostbot.service

      - name: Copy repostbot.timer
        run: |
          sudo cp deploy/repostbot.timer /etc/systemd/system/repostbot.timer

      - name: Configure systemd
        run: |
          # Обновляем конфигурацию systemd
          sudo systemctl daemon-reload

          # Включаем и запускаем службы
          sudo systemctl enable repostbot.service
          sudo systemctl enable repostbot.timer
          sudo systemctl start repostbot.timer